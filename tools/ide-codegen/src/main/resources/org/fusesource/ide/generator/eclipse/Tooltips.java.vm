/*******************************************************************************
 * Copyright (c) 2014 Red Hat, Inc.
 * Distributed under license by Red Hat, Inc. All rights reserved.
 * This program is made available under the terms of the
 * Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Red Hat, Inc. - initial API and implementation
 ******************************************************************************/
package org.fusesource.ide.camel.model.generated;

import java.util.HashMap;
import java.util.Map;

import org.eclipse.osgi.util.NLS;

/**
 * NOTE - this file is auto-generated using Velocity.
 *
 * DO NOT EDIT!
 */
public class Tooltips extends NLS {

    private static final String BUNDLE_NAME = "org.fusesource.ide.camel.model.l10n.tooltips";
    private static final Map<String,String> map = new HashMap<String,String>();

    public static String tooltipAbstractNode;
    public static String tooltipAbstractNodeId;
    public static String tooltipAbstractNodeDescription;

    public static String tooltipEndpoint;
    public static String tooltipEndpointUrl;

#foreach($node in $generator.nodeDefinitions())
    public static String tooltip${node.capitalize($node.getDefinitionName())};
#foreach($p in $node.beanProperties())
    public static String tooltip${node.capitalize($node.getDefinitionName())}${node.capitalize($p.name())};
#end

#end

    public static String tooltip(String key) {
        return map.get("tooltip" + key);
    }

    static {
        // initialize resource bundle
        NLS.initializeMessages(BUNDLE_NAME, Tooltips.class);

        map.put("AbstractNode", tooltipAbstractNode);
        map.put("AbstractNode.Id", tooltipAbstractNodeId);
        map.put("AbstractNode.Description", tooltipAbstractNodeDescription);

        map.put("Endpoint", tooltipEndpoint);
        map.put("Endpoint.Url", tooltipEndpointUrl);

        map.put("Route", tooltipRoute);

#foreach($node in $generator.nodeDefinitions())
        map.put("tooltip${node.capitalize($node.getDefinitionName())}", tooltip${node.capitalize($node.getDefinitionName())});
#foreach($p in $node.beanProperties())
        map.put("tooltip${node.capitalize($node.getDefinitionName())}${node.capitalize($p.name())}", tooltip${node.capitalize($node.getDefinitionName())}${node.capitalize($p.name())});
#end

#end
    }

}
