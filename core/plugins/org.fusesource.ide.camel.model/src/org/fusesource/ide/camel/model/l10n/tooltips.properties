# Copyright (c) 2014 Red Hat, Inc.
# Distributed under license by Red Hat, Inc. All rights reserved.
# This program is made available under the terms of the
# Eclipse Public License v1.0 which accompanies this distribution,
# and is available at http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Red Hat, Inc. - initial API and implementation

#
# NOTE - this file is auto-generated using Velocity.
#
# DO NOT EDIT!
#
tooltipAbstractNode = AbstractNode
tooltipAbstractNodeId = The unique ID of this pattern
tooltipAbstractNodeDescription = Your description of this pattern
tooltipEndpoint = A Camel Endpoint you can send messages to or consume messages from
tooltipEndpointUrl = The URL used to define the Camel Endpoint
tooltipRoute = A collection of Enterprise Integration Patterns
tooltipAggregate = Aggregates messages into a single message
tooltipAggregateInheritErrorHandler = inheritErrorHandler
tooltipAggregateCorrelationExpression = correlationExpression
tooltipAggregateCompletionPredicate = completionPredicate
tooltipAggregateCompletionTimeoutExpression = completionTimeoutExpression
tooltipAggregateCompletionSizeExpression = completionSizeExpression
tooltipAggregateParallelProcessing = parallelProcessing
tooltipAggregateOptimisticLocking = optimisticLocking
tooltipAggregateExecutorServiceRef = Reference to lookup a executorService in the Registry
tooltipAggregateTimeoutCheckerExecutorServiceRef = timeoutCheckerExecutorServiceRef
tooltipAggregateAggregationRepositoryRef = Reference to lookup an aggregationRepository in the Registry
tooltipAggregateStrategyRef = A reference to lookup the AggregationStrategy in the registry
tooltipAggregateStrategyMethodName = strategyMethodName
tooltipAggregateStrategyMethodAllowNull = strategyMethodAllowNull
tooltipAggregateCompletionSize = completionSize
tooltipAggregateCompletionInterval = completionInterval
tooltipAggregateCompletionTimeout = completionTimeout
tooltipAggregateCompletionFromBatchConsumer = completionFromBatchConsumer
tooltipAggregateGroupExchanges = groupExchanges
tooltipAggregateEagerCheckCompletion = eagerCheckCompletion
tooltipAggregateIgnoreInvalidCorrelationKeys = ignoreInvalidCorrelationKeys
tooltipAggregateCloseCorrelationKeyOnCompletion = closeCorrelationKeyOnCompletion
tooltipAggregateDiscardOnCompletionTimeout = discardOnCompletionTimeout
tooltipAggregateForceCompletionOnStop = forceCompletionOnStop
tooltipAggregateOptimisticLockRetryPolicyDefinition = optimisticLockRetryPolicyDefinition
tooltipAOP = Does processing before and after the route is completed
tooltipAOPInheritErrorHandler = inheritErrorHandler
tooltipAOPBeforeUri = beforeUri
tooltipAOPAfterUri = afterUri
tooltipAOPAfterFinallyUri = afterFinallyUri
tooltipBean = Binds beans to Camel message exchanges
tooltipBeanRef = Reference used to lookup the bean in the Registry
tooltipBeanMethod = Name of the method that will be invoked on the bean
tooltipBeanBeanType = beanType
tooltipBeanCache = cache
tooltipCatch = Catches exceptions as part of a doTry, doCatch, doFinally block
tooltipCatchInheritErrorHandler = inheritErrorHandler
tooltipCatchExceptions = exceptions
tooltipCatchHandled = handled
tooltipChoice = Routes messages based on a series of predicates
tooltipChoiceInheritErrorHandler = inheritErrorHandler
tooltipConvertBody = Converts the message body to a form usable by the next endpoint
tooltipConvertBodyType = The target data type for the message
tooltipConvertBodyCharset = Character set of the message body specified using IANA names
tooltipDelay = Delays processing for a set length of time
tooltipDelayInheritErrorHandler = inheritErrorHandler
tooltipDelayExpression = Expression defining the length of the delay
tooltipDelayExecutorServiceRef = Reference to a bean that calculates the delay time
tooltipDelayAsyncDelayed = asyncDelayed
tooltipDelayCallerRunsWhenRejected = callerRunsWhenRejected
tooltipDynamicRouter = Routes messages based on rules specified by the recipients at start up
tooltipDynamicRouterInheritErrorHandler = inheritErrorHandler
tooltipDynamicRouterExpression = Expression used to determine the message recipient(s)
tooltipDynamicRouterUriDelimiter = Character used to delimit multiple destination URIs
tooltipDynamicRouterIgnoreInvalidEndpoints = ignoreInvalidEndpoints
tooltipEnrich = Enriches a message with data from a secondary resource
tooltipEnrichResourceUri = URI of the enrichment data resource
tooltipEnrichAggregationStrategyRef = Reference to the AggregationStrategy used to merge the message and the enrichment data
tooltipEnrichAggregationStrategyMethodName = aggregationStrategyMethodName
tooltipEnrichAggregationStrategyMethodAllowNull = aggregationStrategyMethodAllowNull
tooltipFilter = Filters messages before passing them to a resource
tooltipFilterInheritErrorHandler = inheritErrorHandler
tooltipFilterExpression = Expression used to determine which messages are passed to the resource
tooltipFinally = Node traversed when a doTry, doCatch, doFinally block exits
tooltipFinallyInheritErrorHandler = inheritErrorHandler
tooltipIdempotentConsumer = Filters out duplicate messages
tooltipIdempotentConsumerInheritErrorHandler = inheritErrorHandler
tooltipIdempotentConsumerExpression = Expression used to filter duplicates
tooltipIdempotentConsumerMessageIdRepositoryRef = Reference to the MessageIDRepository that stores a record of previous messages
tooltipIdempotentConsumerEager = eager
tooltipIdempotentConsumerSkipDuplicate = skipDuplicate
tooltipIdempotentConsumerRemoveOnFailure = removeOnFailure
tooltipInOnly = One way exchange pattern where no response is produced (Event Message pattern)
tooltipInOnlyUri = URI of the message destination(s)
tooltipInOut = Exchange pattern where a response is produced
tooltipInOutUri = URI of the message destination
tooltipIntercept = Intercepts messages at each step in the message flow
tooltipInterceptInheritErrorHandler = inheritErrorHandler
tooltipInterceptFrom = Intercepts incoming messages
tooltipInterceptFromInheritErrorHandler = inheritErrorHandler
tooltipInterceptFromUri = URI of the endpoint whose incoming messages are intercepted
tooltipInterceptSendToEndpoint = Intercepts messages sent to an endpoint
tooltipInterceptSendToEndpointInheritErrorHandler = inheritErrorHandler
tooltipInterceptSendToEndpointUri = URI of the intercepted endpoint
tooltipInterceptSendToEndpointSkipSendToOriginalEndpoint = skipSendToOriginalEndpoint
tooltipLoadBalance = Balances message processing among a number of nodes
tooltipLoadBalanceInheritErrorHandler = inheritErrorHandler
tooltipLoadBalanceRef = (deprecated) Reference to a bean configuring the load balancer
tooltipLoadBalanceLoadBalancerType = Specifies and configures the load balancing strategy
tooltipLog = Creates log messages using the Simple language
tooltipLogMessage = Simple language expression defining the log message
tooltipLogLoggingLevel = Level at which messages will be written to the log
tooltipLogLogName = Name used to identify the logger
tooltipLogMarker = marker
tooltipLogLoggerRef = loggerRef
tooltipLoop = Processes a message multiple times
tooltipLoopInheritErrorHandler = inheritErrorHandler
tooltipLoopExpression = Expression used to determine the number of times to execute the loop
tooltipLoopCopy = copy
tooltipMarshal = Marshals data into a format for transmission over a transport or component
tooltipMarshalRef = Reference to a bean configuring the marshaller
tooltipMarshalDataFormatType = dataFormatType
tooltipMulticast = Routes a message to a number of endpoints
tooltipMulticastInheritErrorHandler = Specifies if the node should use the error handler configured for the route
tooltipMulticastParallelProcessing = Specifies if the multicast messages are forwarded to multiple destinations concurrently
tooltipMulticastStrategyRef = Reference to an AggregationStrategy for assembling the results from the endpoints
tooltipMulticastStrategyMethodName = strategyMethodName
tooltipMulticastStrategyMethodAllowNull = strategyMethodAllowNull
tooltipMulticastExecutorServiceRef = Reference to a ThreadPoolExecutor
tooltipMulticastStreaming = Specifies if the multicast works in streaming mode
tooltipMulticastStopOnException = Specifies if the node will stop all processing if one of the endpoints receiving a message throws an exception
tooltipMulticastTimeout = timeout
tooltipMulticastOnPrepareRef = onPrepareRef
tooltipMulticastShareUnitOfWork = Specifies whether all of the resulting exchanges are considered a single shared unit of work
tooltipOnCompletion = Route to be executed when normal route processing completes
tooltipOnCompletionInheritErrorHandler = inheritErrorHandler
tooltipOnCompletionOnCompleteOnly = onCompleteOnly
tooltipOnCompletionOnFailureOnly = onFailureOnly
tooltipOnCompletionExecutorServiceRef = Reference to an ExecutorService
tooltipOnCompletionUseOriginalMessagePolicy = useOriginalMessagePolicy
tooltipOnException = Route to be executed when an exception is thrown
tooltipOnExceptionInheritErrorHandler = inheritErrorHandler
tooltipOnExceptionExceptions = exceptions
tooltipOnExceptionRetryWhile = retryWhile
tooltipOnExceptionRedeliveryPolicyRef = redeliveryPolicyRef
tooltipOnExceptionHandled = handled
tooltipOnExceptionContinued = continued
tooltipOnExceptionOnRedeliveryRef = Reference to a bean defining the processor used before a message is redelivered to the original recipient
tooltipOnExceptionUseOriginalMessagePolicy = useOriginalMessagePolicy
tooltipOnExceptionRedeliveryPolicy = redeliveryPolicy
tooltipOtherwise = Route to be executed when other choices evaluate to false
tooltipOtherwiseInheritErrorHandler = inheritErrorHandler
tooltipPipeline = Executes a sequence of processors in order
tooltipPipelineInheritErrorHandler = inheritErrorHandler
tooltipPolicy = Defines a policy the route will use
tooltipPolicyInheritErrorHandler = inheritErrorHandler
tooltipPolicyRef = Reference to the bean defining the policy
tooltipPollEnrich = Enriches messages with data retrieved from a polling consumer
tooltipPollEnrichResourceUri = URI of the polling consumer
tooltipPollEnrichTimeout = timeout
tooltipPollEnrichAggregationStrategyRef = Reference to the AggregationStrategy used to merge the message and the enrichment data
tooltipPollEnrichAggregationStrategyMethodName = aggregationStrategyMethodName
tooltipPollEnrichAggregationStrategyMethodAllowNull = aggregationStrategyMethodAllowNull
tooltipProcess = Process the message using a custom processor
tooltipProcessRef = Reference to the bean implementing the processor's logic
tooltipRecipientList = Routes messages to a number of dynamically specified recipients
tooltipRecipientListInheritErrorHandler = Specifies if the node should use the error handler configured for the route
tooltipRecipientListExpression = Expression used to determine the list of recipients
tooltipRecipientListDelimiter = Character used to delimit the recipients in a list
tooltipRecipientListParallelProcessing = Specifies if the messages are forwarded to multiple destinations concurrently
tooltipRecipientListStrategyRef = Reference to the AggregrationStrategy used when combining the responses
tooltipRecipientListStrategyMethodName = strategyMethodName
tooltipRecipientListStrategyMethodAllowNull = strategyMethodAllowNull
tooltipRecipientListExecutorServiceRef = Reference to the ExecuterService used when parallel processing the recipients
tooltipRecipientListStopOnException = Specifies if the node will stop all processing if one of the endpoints receiving a message throws an exception
tooltipRecipientListIgnoreInvalidEndpoints = ignoreInvalidEndpoints
tooltipRecipientListStreaming = streaming
tooltipRecipientListTimeout = timeout
tooltipRecipientListOnPrepareRef = onPrepareRef
tooltipRecipientListShareUnitOfWork = Specifies whether all of the resulting exchanges are considered a single shared unit of work
tooltipRecipientListCacheSize = cacheSize
tooltipRemoveHeader = Removes a named header from the message
tooltipRemoveHeaderHeaderName = Name of the header to remove
tooltipRemoveHeaders = Removes message headers whose name matches a specified pattern
tooltipRemoveHeadersPattern = Pattern used to determine the header names
tooltipRemoveHeadersExcludePattern = excludePattern
tooltipRemoveProperty = Removes a named property from the message exchange
tooltipRemovePropertyPropertyName = Name of the property being removed
tooltipResequence = Resequences messages based on an expression
tooltipResequenceInheritErrorHandler = Specifies if the node should use the error handler configured for the route
tooltipResequenceExpression = Expression used to determine how messages are reordered
tooltipResequenceResequencerConfig = resequencerConfig
tooltipRollback = Forces a rollback of a transacted route by throwing RollbackExchangeException
tooltipRollbackMarkRollbackOnly = markRollbackOnly
tooltipRollbackMarkRollbackOnlyLast = markRollbackOnlyLast
tooltipRollbackMessage = message
tooltipRoute = Route
tooltipRouteAutoStartup = autoStartup
tooltipRouteDelayer = delayer
tooltipRouteErrorHandlerRef = errorHandlerRef
tooltipRouteGroup = group
tooltipRouteHandleFault = handleFault
tooltipRouteMessageHistory = messageHistory
tooltipRouteRoutePolicyRef = routePolicyRef
tooltipRouteShutdownRoute = shutdownRoute
tooltipRouteShutdownRunningTask = shutdownRunningTask
tooltipRouteStartupOrder = startupOrder
tooltipRouteStreamCache = streamCache
tooltipRouteTrace = trace
tooltipRoutingSlip = Route a message through a series of processing steps where the sequence of steps is determined at runtime"
tooltipRoutingSlipInheritErrorHandler = inheritErrorHandler
tooltipRoutingSlipExpression = Expression used to determine the processing steps for the message
tooltipRoutingSlipUriDelimiter = Character used to delimit the URIs in the list of endpoints
tooltipRoutingSlipIgnoreInvalidEndpoints = ignoreInvalidEndpoints
tooltipRoutingSlipCacheSize = cacheSize
tooltipSampling = Extract a sample of the exchanges passing through a route
tooltipSamplingInheritErrorHandler = inheritErrorHandler
tooltipSamplingSamplePeriod = samplePeriod
tooltipSamplingMessageFrequency = messageFrequency
tooltipSamplingUnits = units
tooltipSetBody = Sets the contents of the message body
tooltipSetBodyInheritErrorHandler = inheritErrorHandler
tooltipSetBodyExpression = Exression defining the new body contents
tooltipSetExchangePattern = Sets the exchange pattern for the route
tooltipSetExchangePatternPattern = pattern
tooltipSetFaultBody = Sets the contents of the fault message body
tooltipSetFaultBodyInheritErrorHandler = inheritErrorHandler
tooltipSetFaultBodyExpression = Exression defining the new body contents
tooltipSetHeader = Sets the value of a message header
tooltipSetHeaderInheritErrorHandler = inheritErrorHandler
tooltipSetHeaderExpression = Expression defining the value of the header
tooltipSetHeaderHeaderName = Name of the header
tooltipSetOutHeader = Sets the value of a header on the outbound message
tooltipSetOutHeaderInheritErrorHandler = inheritErrorHandler
tooltipSetOutHeaderExpression = Expression defining the value of the header
tooltipSetOutHeaderHeaderName = Name of the header
tooltipSetProperty = Sets a named property on the message exchange
tooltipSetPropertyInheritErrorHandler = inheritErrorHandler
tooltipSetPropertyExpression = Expression defining the value of the property
tooltipSetPropertyPropertyName = Name of the property
tooltipSort = Sorts the contents of the message
tooltipSortInheritErrorHandler = inheritErrorHandler
tooltipSortExpression = expression
tooltipSortComparatorRef = Reference to a bean defining how to sort the contents
tooltipSplit = Splits a message into pieces that can processed separately
tooltipSplitInheritErrorHandler = Specifies if the node should use the error handler configured for the route
tooltipSplitExpression = Expression defining how the original message is split
tooltipSplitParallelProcessing = Specifies if the splitter can send messages to multiple destinations concurrently
tooltipSplitStrategyRef = Reference to a custom AggregationStrategy used to aggregate the responses into a single response
tooltipSplitStrategyMethodName = strategyMethodName
tooltipSplitStrategyMethodAllowNull = strategyMethodAllowNull
tooltipSplitExecutorServiceRef = Reference to a custom ThreadPoolExecutor used for parallel processing of the split messages
tooltipSplitStreaming = Specifies if the splitter works in streaming mode
tooltipSplitStopOnException = Specifies if the node will stop all processing if one of the target endpoints throws an exception
tooltipSplitTimeout = The amount of time, in milliseconds, the node will attempt to deliver a message
tooltipSplitOnPrepareRef = onPrepareRef
tooltipSplitShareUnitOfWork = Specifies whether all of the resulting exchanges are considered a single shared unit of work
tooltipStop = Stops message processing and gracefully shuts the route down
tooltipThreads = Specifies that all steps after this node are processed asynchronously
tooltipThreadsInheritErrorHandler = inheritErrorHandler
tooltipThreadsExecutorServiceRef = Reference to the ExecutorService that handles the asynchronous processing
tooltipThreadsPoolSize = poolSize
tooltipThreadsMaxPoolSize = maxPoolSize
tooltipThreadsKeepAliveTime = keepAliveTime
tooltipThreadsTimeUnit = timeUnit
tooltipThreadsMaxQueueSize = maxQueueSize
tooltipThreadsThreadName = String used to build a name for each thread used in asynchronous processing
tooltipThreadsRejectedPolicy = rejectedPolicy
tooltipThreadsCallerRunsWhenRejected = callerRunsWhenRejected
tooltipThrottle = Controls the number of messages passed to the next node in a given time period
tooltipThrottleInheritErrorHandler = inheritErrorHandler
tooltipThrottleExpression = expression
tooltipThrottleExecutorServiceRef = Reference to an ExecutorService used for asyncronus throttling
tooltipThrottleTimePeriodMillis = timePeriodMillis
tooltipThrottleAsyncDelayed = asyncDelayed
tooltipThrottleCallerRunsWhenRejected = callerRunsWhenRejected
tooltipThrowException = Throws an exception
tooltipThrowExceptionRef = ref
tooltipTransacted = Marks route as a transaction
tooltipTransactedInheritErrorHandler = inheritErrorHandler
tooltipTransactedRef = Reference of the bean defining the transaction policy to use
tooltipTransform = Transforms the message based on an expression
tooltipTransformInheritErrorHandler = inheritErrorHandler
tooltipTransformExpression = Expression defining how the message will be transformed
tooltipTry = Marks the beginning of a doTry, doCatch, doFinally block
tooltipTryInheritErrorHandler = inheritErrorHandler
tooltipUnmarshal = Converts the message data from the wire into a bean that Camel processors can consume
tooltipUnmarshalRef = Reference to the bean implementing the unmarshaller
tooltipUnmarshalDataFormatType = dataFormatType
tooltipValidate = Validates a message based on an expression
tooltipValidateInheritErrorHandler = inheritErrorHandler
tooltipValidateExpression = Expression used to validate the message
tooltipWhen = Triggers a route when an expression evaluates to true
tooltipWhenInheritErrorHandler = inheritErrorHandler
tooltipWhenExpression = Expression to determine if the route is followed
tooltipWireTap = Routes a copy of a message to a secondary destination while passing the original message to the actual recipient
tooltipWireTapUri = URI of the secondary destination
tooltipWireTapNewExchangeProcessorRef = Reference to a processor that creates a new exchange for sending to the tap destination
tooltipWireTapNewExchangeExpression = The expression used to determine the contents of the new message exchange
tooltipWireTapHeaders = headers
tooltipWireTapExecutorServiceRef = Reference to the ExecutorService used to process the tapped message in parallel with the original message
tooltipWireTapCopy = Specifies if the original message is copied into the new message
tooltipWireTapOnPrepareRef = onPrepareRef
