<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

  <!-- This creates an embedded ActiveMQ Broker -->
  <broker xmlns="http://activemq.apache.org/schema/core" useJmx="true" persistent="false">
    <transportConnectors>
      <transportConnector uri="tcp://localhost:61616"/>
    </transportConnectors>
  </broker>

  <!-- Lets connect the Camel ActiveMQ component to the embedded broker.
       See http://camel.apache.org/activemq.html for more information.
  -->
  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="brokerURL" value="failover:tcp://localhost:61616"/>
  </bean>

  <bean id="logQuery" class="org.fusesource.insight.log.log4j.Log4jLogQuery" lazy-init="false" scope="singleton"
        init-method="start" destroy-method="stop"/>

  <!-- Here is a sample which processes the input files
         (leaving them in place - see the 'noop' flag), and
         sends them on a JMS queue. This queue is watched by
         another route which then performs content based
         routing on the messages using XPath.
  -->
  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <route>
      <from uri="file:src/test/data?noop=true"/>
      <to uri="activemq:personnel.records"/>
      <to uri="activemq:browse.me"/>
    </route>
    <route>
      <from uri="activemq:personnel.records"/>
      <choice>
        <when>
          <xpath>/person/city = 'London'</xpath>
          <to uri="file:target/messages/uk"/>
        </when>
        <otherwise>
          <to uri="file:target/messages/others"/>
        </otherwise>
      </choice>
    </route>
    <!--
    <route id="timerToLog">
      <from uri="timer:foo?period=5000"/>
      <marshal>
        <json library="Jackson"/>
      </marshal>
      <log message="The message contains ${body}"/>
      <to uri="activemq:timer.events"/>
    </route>
-->
  </camelContext>

</beans>
